{{- if not .Values.agent.existingSecrets.agentToken }}
apiVersion: v1
kind: Secret
metadata:
  labels:
    {{- include "harness.agentLabels" (dict "context" . "component" .Values.agent.name "name" "agent-secret") | nindent 4 }}
  name: {{ .Values.agent.name }}
  namespace: {{ .Release.Namespace }}
type: Opaque
stringData:
  GITOPS_AGENT_TOKEN: |
    {{ .Values.harness.secrets.agentSecret }}
{{- end }}
---
{{- if and .Values.harness.secrets.caData.enabled (not .Values.agent.existingSecrets.caBundle) }}
apiVersion: v1
kind: Secret
metadata:
  labels:
    {{- include "harness.agentLabels" (dict "context" . "component" .Values.agent.name "name" "agent-ca") | nindent 4 }}
  name: {{ .Values.agent.name }}-ca
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  ca.bundle: |
    {{ .Values.harness.secrets.caData.secret }}
---
{{- end }}
{{- if not .Values.agent.existingSecrets.mtls }}
apiVersion: v1
kind: Secret
metadata:
  labels:
    {{- include "harness.agentLabels" (dict "context" . "component" .Values.agent.name "name" "agent-ssh") | nindent 4 }}
  name: {{ .Values.agent.name }}-mtls
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  client.crt: |
    {{ .Values.harness.secrets.mtlsClientCert }}
  client.key: |
    {{ .Values.harness.secrets.mtlsClientKey }}
{{- end }}


